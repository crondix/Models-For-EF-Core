﻿@using MyModels.Models

@if (status == "update" || status == "set")
{
    <div class="@(PropertyName)_Container">
        <input type="number" id="@PropertyName" name="@PropertyName" required @bind="@PropertyValue">
        @UnitsValue
    </div>
}

else if (status == "get")
{
    <span>@PropertyValue @UnitsValue</span>


}
else
{
    <span>speed not found</span>
}
<EditButton OnButtonClick="HandleButtonClick"></EditButton>

@code {


    [Parameter]
    public object Object { get; set; }


    [Parameter]
    public string PropertyName { get; set; }

    private int PropertyValue
    {

        // get =>Convert.ToInt32( Printer.GetType().GetProperty(PropertyName).GetValue(Printer));
        // set => Printer.GetType().GetProperty(PropertyName).SetValue(Printer, Convert.ToInt32(value));
        get
        {

            return Convert.ToInt32((Object.GetType().GetProperty(PropertyName).GetValue(Object)));
        }
        set
        {
            var propertyType = Object.GetType().GetProperty(PropertyName).PropertyType;
            Object.GetType().GetProperty(PropertyName).SetValue(Object, Convert.ChangeType(value, propertyType));
        }
    }

    [Parameter]
    public string UnitsName { get; set; }


    private Measurement_units UnitsValue
    {

        get => ((Measurement_units)Object.GetType().GetProperty(UnitsName).GetValue(Object));

    }

    string status = "";

    [Parameter]
    public string Status
    {
        get
        {
            return status;
        }
        set
        {
            if (value == "get" || value == "set" || value == "update")
            {
                status = value;

            }
            else
            {
                status = "get";

            }
        }

    }
    int TempValue { get; set; }
    protected override void OnInitialized()
    {
        TempValue = PropertyValue;


    }

    private void HandleButtonClick(string buttonType)
    {

        if (buttonType == "reset")
        {

            PropertyValue = TempValue;
            Status = "get";
        }
        else
        {
            Status = buttonType;
        }


        // StateHasChanged(); // Важно вызвать StateHasChanged() после изменения статуса

    }

}