@using MyModels.Models

@if (status == "update" || status == "set")
{
    <div class="@(PropertyName)_Container">
        <input type="number" id="@PropertyName" name="@PropertyName" required @bind="@PropertyValue">
        @UnitsValue
    </div>
}

else if (status == "get" )
{
     <div>
    <span>@PropertyValue @UnitsValue</span>
        <span>propertyValue= @propertyValue</span>
    </div>
    
}
else
{
    <span>speed not found</span>
}
<EditButton OnButtonClick="HandleButtonClick"></EditButton>

@code {


    [Parameter]
    public object Object { get; set; }


    [Parameter]
    public string PropertyName { get; set; }

    int? propertyValue;
    private int? PropertyValue
    {
        get
        {
          return  propertyValue;
        }
        set
        {
            var propertyType = Object.GetType().GetProperty(PropertyName)?.PropertyType;

            if (propertyType != null && value != null)
            {
                if (propertyType == typeof(int))
                {
                    Object.GetType().GetProperty(PropertyName)?.SetValue(propertyValue, value.Value);
                    Object.GetType().GetProperty(PropertyName)?.SetValue(Object, value.Value);
                }
                else if (propertyType == typeof(int?))
                {
                    Object.GetType().GetProperty(PropertyName)?.SetValue(propertyValue, value);
                    Object.GetType().GetProperty(PropertyName)?.SetValue(Object, value);
                }
            }
        }
    }

    [Parameter]
    public string UnitsName { get; set; }


    private Measurement_units UnitsValue
    {

        get => ((Measurement_units)Object.GetType().GetProperty(UnitsName).GetValue(Object));

    }

    string status = "";

    [Parameter]
    public string Status
    {
        get
        {
            return status;
        }
        set
        {
            if (value == "get" || value == "set" || value == "update")
            {
                status = value;

            }
            else
            {
                status = "get";

            }
        }

    } 

    private int? TempValue { get; set; }

    protected override void OnInitialized()
    {
        TempValue = PropertyValue;
    }

    private void HandleButtonClick(string buttonType)
    {
        if (buttonType == "reset")
        {
            PropertyValue = TempValue;
            Status = "get";
        }
        else
        {
            Status = buttonType;
        }
        // StateHasChanged(); // Важно вызвать StateHasChanged() после изменения статуса
    }

}
