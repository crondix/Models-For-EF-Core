@using MyModels.Models

@if (status == "update" || status == "set")
{

    <div>
        <input list="browsers" id="myBrowser" name="myBrowser" @oninput="HandleSelectionChange" @bind=Printer.Company_name.name />
        <datalist id="browsers">

            @for (int i = 0; i < companies.Count; i++)
        {
                <option value="@companies.ElementAt(i)"></option>
        }
           @*  @foreach (var compani in companies)
            {
                <option value="@compani" />
            } *@

        </datalist>
    </div>

}
else if (status == "get" )
{
    <span>@Printer.Company_name.name</span>
}
else
{
    <span>name not found</span>
}
<EditButton OnButtonClick="HandleButtonClick"></EditButton>
@code {
    [Parameter]
    public Printers Printer { get; set; }


    [Parameter]
    public virtual ICollection<Companies> companies { get; set; }


    string status="";

    [Parameter]
    public string Status
    {
        get
        {
            return status;
        }
        set
        {
            if(value=="get" || value=="set" || value=="update"){ 
                status = value;
            }
            else
            {
                status = "get";
            }
        }
    }
    RadzenDropDown<string> radzenDropDown;
    
    Companies TempValue { get; set; }
    protected override void OnInitialized()
    {

    
        TempValue = Printer.Company_name;

    }

    private void HandleSelectionChange(ChangeEventArgs e)
    {
        string selectedValue = e.Value.ToString();

        // Проверяем, есть ли выбранное значение в базе данных
        if (companies.Any(p => p.name == selectedValue))
        {
            // Если есть, обновляем Printer.MaxPrintFormat
            Printer.Company_name = companies.FirstOrDefault(p => p.name == selectedValue);
        }
        else
        {
        
            // Если нет, оставляем старое значение
            // или выполняем другую логику по необходимости
        }
    }
    private void HandleButtonClick(string buttonType)
    {

        if (buttonType == "reset")
        {
            Printer.Company_name = TempValue;
            Status = "get";
            
        }
        else
        {
            Status = buttonType;
          
        }


        // StateHasChanged(); // Важно вызвать StateHasChanged() после изменения статуса

    }
 
}
