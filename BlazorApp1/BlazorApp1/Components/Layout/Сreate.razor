@using BlazorApp1.Data
@using MyModels.Models
@inject ApplicationContext DbContextPrinters

<form class="create-container" name="test">
   
    <RadzenStack AlignItems="AlignItems.Center" Class="rz-mx-auto rz-my-12">

        <RadzenImage Path="@(Printer.image is null? "/image/not image.jpg" : Printer.image)" Style="width: 15rem;" AlternateText="community" />

    </RadzenStack>
    <div class="product-characteristics__group"></div>
    <div class="product-characteristics__group-title">Общие характеристики</div>

    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="modelName">Model Name:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <input type="text" id="modelName" name="modelName" required style="width:100%"  value="@(Printer is not null  ? Printer.ModelName :"")">
        </div>
    </div> 
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="ciss">CISS:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <input type="checkbox" id="ciss" name="ciss" value="@(Printer is not null  ? Printer.CISS:"")" checked="@(Printer is not null ? Printer.CISS ? "checked":"" :"")">
        </div>
    </div>
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="autoDoubleSided" value="@(Printer is not null  ? Printer.AutomaticDoubleSidedPrinting:"")" checked="@(Printer is not null ? Printer.AutomaticDoubleSidedPrinting ? "checked":"" :"")">Automatic Double-Sided Printing:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <input type="checkbox" id="autoDoubleSided" name="autoDoubleSided">
        </div>
    </div>
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="colorPrinting">Color Printing:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <input type="checkbox" id="colorPrinting" name="colorPrinting" value="@(Printer is not null  ? Printer.СolorPrinting:"")" checked="@(Printer is not null ? Printer.СolorPrinting ? "checked":"" :"")">
        </div>
    </div>

    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="companyName">Company Name:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <RadzenDropDown @ref=@radzenDropDown @bind-SearchText=SearchText FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true"
                            Data=@companies TextProperty="name" ValueProperty="name" AllowClear="true" @bind-Value=SearchText Style="width: 100%; max-width: 400px;" />  <RadzenLabel Text="@searchTextStatus" />
           
        </div>
    </div> 
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="Resolution">Resolution:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <select id="Resolution" name="Resolution" required>
                @for (short i = 0; i < Resolutions.Count; i++)
                {
                    @if (Printer is not null)
                    {
                        if (Printer.Company_nameid == @Resolutions.ElementAt(i).id)
                        {
                            <option selected value="@Resolutions.ElementAt(i).id">@(Resolutions.ElementAt(i).width) X @(Resolutions.ElementAt(i).height) @(Resolutions.ElementAt(i).units)</option>
                        }
                        else
                        {
                            <option value="@Resolutions.ElementAt(i).id">@(Resolutions.ElementAt(i).width) X @(Resolutions.ElementAt(i).height) @(Resolutions.ElementAt(i).units)</option>
                        }
                    }
                    else if (Printer is null)
                    {
                        <option value="@Resolutions.ElementAt(i).id">@(Resolutions.ElementAt(i).width) X @(Resolutions.ElementAt(i).height) @(Resolutions.ElementAt(i).units)</option>
                    }
                }
            </select>
        </div>
    </div> 
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label>BWPrintingSpeed:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <input type="text" id="BWPrintingSpeed" name="BWPrintingSpeed" size="6" required  value="@(Printer is not null  ? Printer.BWPrintingSpeed.speed :"")">
            @Printer.BWPrintingSpeed.units
        </div>
    </div>
    @if (Printer is not null)
    {
        @if (Printer.СolorPrinting)
        {
            <div class="product-characteristics-spec">
                <div class="product-characteristics__spec-title">
                    <label for="Resolution">ColorPrintingSpeed:</label>
                </div>
                <div class="product-characteristics__spec-value">
                    <input type="text" id="ColorPrintingSpeed" name="ColorPrintingSpeed" size="6" required value="@(Printer is not null  ? Printer.ColorPrintingSpeed.speed :"")">
                    @Printer.BWPrintingSpeed.units
                </div>
            </div>
        }
    }
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="Resolution">ColorPrintingSpeed:</label>
        </div>
        <div class="product-characteristics__spec-value">
       
        </div>
    </div>
   

   
  

   
    


 
@*     <br> 
    @if (Printer is not null)
    {
        @if (Printer.СolorPrinting)
        {
           
           
            <br>
        }

    }
    else
    {
        <label for="Resolution">ColorPrintingSpeed:</label>
        <input type="text" id="ColorPrintingSpeed" name="ColorPrintingSpeed" size="6" required onmousemove="this.style.width = ((this.value.length + 1) * 8) + 'px';" >
        <span> стр/мин</span>
        <br>
    } *@
   
   
   
    <input type="reset" value="Очистить">
</form>


@code {
    [Parameter]
    public Printers Printer { get; set; }
    string value { get; set; }


    RadzenDropDown<string> radzenDropDown;
    string searchTextStatus;
    string searchText="";

    public virtual ICollection<Companies> companies { get; set; }
    public virtual ICollection<Resolution> Resolutions { get; set; }
    protected override void OnInitialized()
    {
        companies = DbContextPrinters.Companies.ToArray();
        Resolutions = DbContextPrinters.Resolution.ToArray();
        SearchText = Printer.Company_name.name;
        searchTextStatus = $"Search text: {SearchText}";
    } 



  

    public string SearchText
    {
        get
        {
            return searchText;
        }
        set
        {
            // if (searchText != value)
            // {
                searchText = value;
                searchTextStatus = $"Search text: {searchText}";
              
            // }
        }
    }
}
