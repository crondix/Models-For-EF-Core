@using BlazorApp1.Data
@using BlazorApp1.Components.Layout.View
@using MyModels.Models

@inject ApplicationContext DbContextPrinters


<form class="create-container" name="test">
   
    <RadzenStack AlignItems="AlignItems.Center" Class="rz-mx-auto rz-my-12">

        <RadzenImage Path="@(Printer.image is null? "/image/not image.jpg" : Printer.image)" Style="width: 15rem;" AlternateText="community" />

    </RadzenStack>
    <div class="product-characteristics-container">
    <div class="product-characteristics__group"></div>
    <div class="product-characteristics__group-title">Общие характеристики</div>

    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="modelName">Model Name:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <ModelName  Status="get" Printer="@Printer"></ModelName>
            @* <input type="text" id="modelName" name="modelName" required style="width:100%"  value="@(Printer is not null  ? Printer.ModelName :"")"> *@
        </div>
    </div> 
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="ciss">CISS:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <BooleanType Status="get" PropertyName="CISS" Printer="@Printer"></BooleanType>
        </div>
    </div>
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
         
            <label for="autoDoubleSided" value="@(Printer is not null  ? Printer.AutomaticDoubleSidedPrinting:"")" checked="@(Printer is not null ? Printer.AutomaticDoubleSidedPrinting ? "checked":"" :"")">Automatic Double-Sided Printing:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <BooleanType Status="get" PropertyName="AutomaticDoubleSidedPrinting" Printer="@Printer"></BooleanType>
        </div>
    </div>
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="colorPrinting">Color Printing:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <BooleanType Status="get" PropertyName="СolorPrinting" Printer="@Printer"></BooleanType>
           
        </div>
    </div>

    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="companyName">Company Name:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <CompanyName Printer="@Printer" companies="@DbContextPrinters.Companies.ToArray()" Status="get"></CompanyName>
        </div>
    </div> 
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label for="Resolution">Resolution:</label>
        </div>
        <div class="product-characteristics__spec-value">
            <ResolutionView PropertyName="MaxPrintResolution" Printer="@Printer" Status="get"></ResolutionView>
        </div>
    </div> 
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
            <label>BWPrintingSpeed:</label>
        </div>
        <div class="product-characteristics__spec-value">
                <IntegerType PropertyName="BWPrintingSpeed" UnitsName="SpeedUnits" Printer="@Printer" Status="get"></IntegerType>
            
        </div>
    </div>
    @if (Printer is not null)
    {
        @if (Printer.СolorPrinting)
        {
            <div class="product-characteristics-spec">
                <div class="product-characteristics__spec-title">
                    <label for="Resolution">ColorPrintingSpeed:</label>
                </div>
                <div class="product-characteristics__spec-value">

                        <IntegerType PropertyName="ColorPrintingSpeed" UnitsName="SpeedUnits" Printer="@Printer" Status="get"></IntegerType>
                   
                </div>
            </div>
        }
    }
    <div class="product-characteristics-spec">
        <div class="product-characteristics__spec-title">
                <label for="Resolution">MaxMonthlyPrintVolumes:</label>
        </div>
        <div class="product-characteristics__spec-value">
                <IntegerType PropertyName="MaxMonthlyPrintVolumes" UnitsName="MaxMonthlyPrintVolumesUnits" Printer="@Printer" Status="get"></IntegerType>
        </div>
    </div>
        <div class="product-characteristics-spec">
            <div class="product-characteristics__spec-title">
                <label for="Resolution">MaxPrintFormat:</label>
            </div>
            <div class="product-characteristics__spec-value">
                <MaxPrintFormat Paper_sizes="MaxPrintFormat" Printer="@Printer" Status="get"></MaxPrintFormat>
            </div>
        </div> 
    </div>

   

   <div class="control-block">
        <button class="button Save" type="button" @onclick="(()=>UpdatePrinter(Printer))">Save</button>
        <button class="button Cancel" type="button" @onclick="(()=>Cancel())">Cancel</button>
        @* <input type="reset" value="Очистить"> *@
   </div>
    
</form>


@code {
    [Parameter]
    public Printers Printer { get; set; }


    string value { get; set; }

    [Parameter]
    public Printers TempPrinter { get; set; }


    public virtual ICollection<Companies> companies { get; set; }
    public virtual ICollection<Paper_sizes> MaxPrintFormat { get; set; }
    // public virtual ICollection<Resolution> Resolutions { get; set; }
    protected override void OnInitialized()
    {
        companies = DbContextPrinters.Companies.ToArray();
        MaxPrintFormat = DbContextPrinters.Paper_sizes.ToArray();
        // Resolutions = DbContextPrinters.Resolution.ToArray();
       


    } 







  

 
}
